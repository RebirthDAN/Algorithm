#include <iostream>
#include <cmath>

using namespace std;

main()
{
    int n,r,a;
    double b,c;
    cin>>n;
    while(n--)
    {
        cin>>r;
        for(int i=1;;i++)
        {
            a=2*r+i;
            b=((2*r*r-2*r*a)*1.0)/((2*r-a)*1.0);
            if(b<a) break;
            if(b!=(int)b) continue;
            c=sqrt(a*a+b*b);
            if(c!=(int)c) continue;
            cout<<a<<","<<b<<","<<c<<endl;
        }
        if(n) cout<<endl;
    }
}
/*三角形2
时间限制:1000MS  内存限制:65535K
提交次数:0 通过次数:0

题型: 编程题   语言: G++;GCC;VC
Description
著名的数学家毕达哥拉斯可能从来都不曾想过有人居然会问他这样的一个问题：给出一个整数，存在多少个直角三角形，
它的内切圆半径等于这个整数，而且其他边的长度也是整数。既然毕达哥拉斯不可能预见到有计算机的出现，
如果他回答不出来，那谁又能责怪他呢？但是现在既然你有了计算机，那么回答不出来就说不过去了。



输入格式
第一行有一个整数n，代表有多少个数据（1<=n<=20）。接下来有n行，每行代表一个数据。一个数据就是一个整数r，内切圆半径（1<=r<=100）。


输出格式
每个数据都必须有相应的输出。两个数据的输出之间有一个空行。
对于每一个数据，如果找不到解，则输出一个空行。如果找到解，就把符合条件的所有直角三角形输出。每个三角形占一行，输出该三角形三边，按由短到长，
必须先输出短边，然后一个逗号，再输出长边。两个三角形之间不能有空行，而且必须按照短边升序排列。


输入样例
2
5
10


输出样例
11,60,61
12,35,37
15,20,25

21,220,221
22,120,122
24,70,74
25,60,65
28,45,53
30,40,50
*/
